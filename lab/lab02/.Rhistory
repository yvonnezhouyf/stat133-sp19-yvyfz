#four[1]
#four[0]
#four[-1]
#four[-c(1,2,3)]
#four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[1]
#four[0]
#four[-1]
#four[-c(1,2,3)]
#four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[1]
four[0]
#four[-1]
#four[-c(1,2,3)]
#four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[1]
four[0]
four[-1]
#four[-c(1,2,3)]
#four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[2]
four[0]
four[-1]
#four[-c(1,2,3)]
#four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[1]
four[0]
four[-1]
#four[-c(1,2,3)]
#four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
#four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
#four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player.seq(from = 1, to = len(player), by = 2)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
seq(from = 1, to = len(player), by = 2, player)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
seq(1, player.len(), by= 2)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
seq(1, player.len, by= 2)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
seq(1, lenght(player), by= 2)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
seq(1, length(player), by= 2)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player.seq(1, length(player), by= 2)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(1, length(player), by= 2)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(1, length(player), by = 2)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
length(player)
player[seq(1, length(player), by = 2)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(1, length(player), by = 2)]
player[seq(2, length(player), by = 2)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(1, length(player), by = 2)]
salary[seq(2, length(salary), by = 2)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(2, length(player), by = 2)]
salary[seq(1, length(salary), by = 2)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(2, length(player), by = 2)]
salary[seq(1, length(salary), by = 2)]
team[seq(5, length(team), by = 5)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(2, length(player), by = 2)]
salary[seq(1, length(salary), by = 2)]
team[seq(5, length(team), by = 5)]
scored[seq(10, length(scored), by = 10)]
team[-seq(2, length(team), by = 2)]
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
player[seq(2, length(player), by = 2)]
salary[seq(1, length(salary), by = 2)]
team[seq(5, length(team), by = 5)]
scored[seq(10, length(scored), by = 10)]
rev(team[seq(2, length(team), by = 2)])
# AND
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
# OR
TRUE | TRUE
TRUE | FALSE
FALSE | FALSE
# NOT
!TRUE
!FALSE
# players of Golden State (GSW)
player[team == 'GSW']
# name of players with salaries greater than 20 million dollars
player[salary > 20000000]
# name of players with scored points between 1000 and 1200 (exclusive)
player[scored > 1000 & points < 1200]
load("/Users/zhoujq/Desktop/Berkeley/stat133/lab/lab02/nba2018-salary-points.RData")
load("/Users/zhoujq/Desktop/Berkeley/stat133/lab/lab02/nba2018-salary-points.RData")
# AND
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
# OR
TRUE | TRUE
TRUE | FALSE
FALSE | FALSE
# NOT
!TRUE
!FALSE
# players of Golden State (GSW)
player[team == 'GSW']
# name of players with salaries greater than 20 million dollars
player[salary > 20000000]
# name of players with scored points between 1000 and 1200 (exclusive)
player[scored > 1000 & points < 1200]
# AND
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
# OR
TRUE | TRUE
TRUE | FALSE
FALSE | FALSE
# NOT
!TRUE
!FALSE
# players of Golden State (GSW)
player[team == 'GSW']
# name of players with salaries greater than 20 million dollars
player[salary > 20000000]
# name of players with scored points between 1000 and 1200 (exclusive)
player[scored > 1000 & scored < 1200]
player.which(position == c)
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
player.which(position == "c")
players.which(position == "c")
player[team == "GSW" & position == "C"]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
player[position == "C"][which.max(salary)]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
salary[position == "C"][which.max(salary)]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
salary[position == "C"]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
salary[position == "C"][which.max(salary)]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
salary[position == "C"]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
max(salary[position == "C"])
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
max(salary[position == "C"])
team[which.max(scored)]
player[team == "GSW" & position == "C"]
player[team == "GSW" | team == "LAL"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[(team == "LAL" | team == "GSW") & position == "SF"]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
max(salary[position == "C"])
team[which.max(scored)]
player[which.max(points3)]
plot(scored, salary)
install.packages(c("ggplot2", "plotly"))
plot(scored, salary)
library(plotly)
library(plotly)
plot(scored, salary)
plot(scored, salary)
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
plot(scored, salary)
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
log_scored <- log(scored)
log_salary <- log(salary)
plot(log_scored, log_salary)
plot(scored, salary)
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
log_scored <- log(scored)
log_salary <- log(salary)
plot(log_scored, log_salary)
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = player)
plot(scored, salary)
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
log_scored <- log(scored)
log_salary <- log(salary)
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = player)
plot(scored, salary)
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
log_scored <- log(scored)
log_salary <- log(salary)
plot(log_scored, log_salary)
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = player)
plot(scored, salary)
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
log_scored <- log(scored)
log_salary <- log(salary)
plot(log_scored, log_salary)
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = player)
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = abbreviate(player))
plot(scored[team == "GSW"], salary[team == "GSW"])
plot(scored[team == "GSW"], salary[team == "GSW"])
text(scored[team == "GSW"], salary[team == "GSW"], labels = player)
plot(scored[team == "GSW"], salary[team == "GSW"])
#text(scored[team == "GSW"], salary[team == "GSW"], labels = player)
plot(scored[team == "GSW"], salary[team == "GSW"])
text(scored[team == "GSW"], salary[team == "GSW"], labels = player)
plot(scored[team == "GSW"], salary[team == "GSW"])
text(scored[team == "GSW"], salary[team == "GSW"], labels = player)
log_scored <- log(scored[team == "GSW"])
log_salary <- log(salary[team == "GSW"])
plot(scored[team == "GSW"], salary[team == "GSW"])
text(scored[team == "GSW"], salary[team == "GSW"], labels = player)
log_scored <- log(scored[team == "GSW"])
log_salary <- log(salary[team == "GSW"])
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = player)
position_fac <- factor(position)
table(position_fac)
position_fac[1:5]
plot(scored[team == "GSW"], salary[team == "GSW"])
text(scored[team == "GSW"], salary[team == "GSW"], labels = abbreviate(player))
log_scored <- log(scored[team == "GSW"])
log_salary <- log(salary[team == "GSW"])
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = abbreviate(player))
position_fac[1:5]
position[salary > 15000000]
position_fac[1:5]
position[salary > 15000000]
freq(position[salary > 15000000])
position_fac[1:5]
position[salary > 15000000]
frequency(position[salary > 15000000])
position_fac[1:5]
position[salary > 15000000]
#frequency(position[salary > 15000000])
position_fac[1:5]
position[salary > 15000000]
count(position[salary > 15000000], "C")
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
table(position_fac[team == "SG"])
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
table(position_fac[team == "SG"]) / length(player[team == "SG"])
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
table(position_fac[team == "SG"] / length(player[team == "SG"]))
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
table(position_fac[team == "SG"])
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
table(position_fac[position == "SG"])
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
position_fac[position == "SG"] /
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
team_fac <- factor(team)
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
team_fac <- factor(team)
team_fac
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
team_fac <- factor(team)
table(team_fac)
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
team_fac <- factor(team)
table(team_fac[position == "SG"] / team_fac)
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
team_fac <- factor(team)
table(team_fac[position == "SG"])
position_fac[team == "GSW"]
position[salary > 15000000]
table(position_fac[salary > 15000000])
team_fac <- factor(team)
table(team_fac[position == "SG"]) / table(team_fac)
plot(scored, salary, col = position_fac)
plot(scored, salary, col = position_fac)
