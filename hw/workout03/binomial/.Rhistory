#bin_choose(2L, 5L)
#bin_probability(success = 2, trials = 5, prob = 0.5)
check_trials(5)
#bin_choose(2L, 5L)
bin_probability(success = 2, trials = 5, prob = 0.5)
check_successes <- function(success, trials) {
for (i in length(success)) {
if (success[i] > trials || success[i] < 0 || (success[i] %% 1 != 0)) {
stop("invalid success value")
}
return(TRUE)
}
}
bin_probability(success = 2, trials = 5, prob = 0.5)
#check_trials(5)
#bin_choose(2L, 5L)
#bin_probability(success = 2, trials = 5, prob = 0.5)
#check_trials(5)
bin_choose(2, 5)
bin_probability <- function(success, trials, prob) {
if(!check_trials(trials)) {
stop("invalid trials value")
} else if (!check_prob(prob)) {
stop("invalid prob value")
} else if (!check_successes(trials, success)) {
stop("invalid success value")
} else {
return(bin_choose(success, trials) / (2 ** trials))
}
}
bin_probability <- function(success, trials, prob) {
if(!check_trials(trials)) {
stop("invalid trials value")
} else if (!check_prob(prob)) {
stop("invalid prob value")
} else if (!check_successes(trials, success)) {
stop("invalid success value")
} else {
return(bin_choose(success, trials) / (2 ** trials))
}
}
#bin_probability(success = 2, trials = 5, prob = 0.5)
#check_trials(5)
bin_choose(2, 5)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_probability <- function(success, trials, prob) {
if(!check_trials(trials)) {
stop("invalid trials value")
} else if (!check_prob(prob)) {
stop("invalid prob value")
} else if (!check_successes(success, trials)) {
stop("invalid success value")
} else {
return(bin_choose(trials, success) / (2 ** trials))
}
}
bin_probability(success = 2, trials = 5, prob = 0.5)
#check_trials(5)
#bin_choose(2, 5)
bin_probability(success = 0:2, trials = 5, prob = 0.5)
#check_trials(5)
#bin_choose(2, 5)
bin_probability(success = 55, trials = 100, prob = 0.45)
#check_trials(5)
#bin_choose(2, 5)
bin_probability <- function(success, trials, prob) {
if(!check_trials(trials)) {
stop("invalid trials value")
} else if (!check_prob(prob)) {
stop("invalid prob value")
} else if (!check_successes(success, trials)) {
stop("invalid success value")
} else {
return(bin_choose(trials, success) * prob / (2 ** trials))
}
}
bin_probability(success = 55, trials = 100, prob = 0.45)
#check_trials(5)
#bin_choose(2, 5)
bin_probability <- function(success, trials, prob) {
if(!check_trials(trials)) {
stop("invalid trials value")
} else if (!check_prob(prob)) {
stop("invalid prob value")
} else if (!check_successes(success, trials)) {
stop("invalid success value")
} else {
return(bin_choose(trials, success) / ((1 / prob) ** trials))
}
}
bin_probability(success = 55, trials = 100, prob = 0.45)
#check_trials(5)
#bin_choose(2, 5)
bin_probability <- function(success, trials, prob) {
if(!check_trials(trials)) {
stop("invalid trials value")
} else if (!check_prob(prob)) {
stop("invalid prob value")
} else if (!check_successes(success, trials)) {
stop("invalid success value")
} else {
return(bin_choose(trials, success) / (2 ** trials))
}
}
bin_probability(success = 55, trials = 100, prob = 0.45)
#check_trials(5)
#bin_choose(2, 5)
bin_probability <- function(success, trials, prob) {
if(!check_trials(trials)) {
stop("invalid trials value")
} else if (!check_prob(prob)) {
stop("invalid prob value")
} else if (!check_successes(success, trials)) {
stop("invalid success value")
} else {
return(bin_choose(trials, success) * (prob ** success) * ((1 - prob) ** (trials - success)))
}
}
bin_probability(success = 55, trials = 100, prob = 0.45)
#check_trials(5)
#bin_choose(2, 5)
bin_probability(success = 2, trials = 5, prob = 0.5)
#check_trials(5)
#bin_choose(2, 5)
bin_probability(success = 0:2, trials = 5, prob = 0.5)
#check_trials(5)
#bin_choose(2, 5)
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
return(result)
}
bin_distribution(trials = 5, prob = 0.5)
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
names(result) = c("success", "probabality")
return(result)
}
bin_distribution(trials = 5, prob = 0.5)
plot.bindis <- function(df) {
barplot(df$success, df$probability)
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
plot(df$success, df$probability)
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
?barplot
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
names(result) = c("success", "probabality")
class(result) = c("bindis", "data.frame")
return(result)
}
bin_distribution(trials = 5, prob = 0.5)
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
names(result) = c("success", "probabality")
class(result) = c("bindis", "data.frame")
return(result)
}
bin_distribution(trials = 5, prob = 0.5)
plot.bindis <- function(df) {
barplot(df$success, df$probability)
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, df$probability))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, df$probability, args.legend = list(x = "topleft", col=c("yellow"), legend=c("Young"))))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, df$probability))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, names.arg = df$probability))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$probability, names.arg = df$success))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, df$probability))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$probability))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, xlab = "success", ylab = "probability"))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df, xlab = "success", ylab = "probability"))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, xlab = "success", ylab = "probability", stat = "identity"))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$success, xlab = "success", ylab = "probability"ï¼Œnames.arg = df$success))
plot.bindis <- function(df) {
return(barplot(df$success, xlab = "success", ylab = "probability", names.arg = df$success))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot.bindis <- function(df) {
return(barplot(df$probability, xlab = "success", ylab = "probability", names.arg = df$success))
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
dis1 <- bin_distribution(trials = 5, prob = 0.5)
#plot(dis1)
typeof(df$probability)
#dis1 <- bin_distribution(trials = 5, prob = 0.5)
#plot(dis1)
typeof(df$probability)
#dis1 <- bin_distribution(trials = 5, prob = 0.5)
#plot(dis1)
typeof(bin_distribution(trials = 5, prob = 0.5)$probability)
typeof(bin_distribution(trials = 5, prob = 0.5))
bin_distribution(trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)[probability]
bin_distribution(trials = 5, prob = 0.5)
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
names(result) = c("success", "probabality")
#class(result) = c("bindis", "data.frame")
return(result)
}
bin_distribution(trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)$probability
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
names(result) = c("success", "probabality")
class(result) = c("bindis", "data.frame")
return(result)
}
bin_distribution(trials = 5, prob = 0.5)
plot.bindis <- function(df) {
return(barplot(df$probability, xlab = "success", ylab = "probability", names.arg = df$success))
}
plot.bindis <- function(df) {
barplot(df$probability, xlab = "success", ylab = "probability", names.arg = df$success)
}
#dis1 <- bin_distribution(trials = 5, prob = 0.5)
#plot(dis1)
typeof(bin_distribution(trials = 5, prob = 0.5)$probability)
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
names(result) = c("success", "probabality")
class(result) = c("bindis", "data.frame")
return(data.frame(result))
}
bin_distribution <- function(trials, prob) {
#result = data.frame(0:trials, bin_probability(0:5, 5, prob))
#names(result) = c("success", "probabality")
#class(result) = c("bindis", "data.frame")
#return(data.frame(result))
bindis = data.frame(success=0:trials, probability=0:trials)
for(i in 1:(trials+1)){
bindis[i,1] = i-1
bindis[i,2] = bin_probability(success=i-1, trials=trials, prob=prob)
}
class(bindis) = c("bindis","data.frame")
return(bindis)
}
bin_distribution(trials = 5, prob = 0.5)
plot.bindis <- function(df) {
barplot(df$probability, xlab = "success", ylab = "probability", names.arg = df$success)
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
typeof(bin_distribution(trials = 5, prob = 0.5)$probability)
bin_probability(0:5, 5, prob)
bin_probability(0:5, 5, 0.5)
bin_distribution <- function(trials, prob) {
result = data.frame(0:trials, bin_probability(0:5, 5, prob))
names(result) = c("success", "probabality")
#class(result) = c("bindis", "data.frame")
return(result)
#bindis = data.frame(success=0:trials, probability=0:trials)
#for(i in 1:(trials+1)){
#  bindis[i,1] = i-1
#  bindis[i,2] = bin_probability(success=i-1, trials=trials, prob=prob)
#}
#class(bindis) = c("bindis","data.frame")
#return(bindis)
}
plot.bindis <- function(df) {
barplot(df$probability, xlab = "success", ylab = "probability", names.arg = df$success)
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
typeof(bin_distribution(trials = 5, prob = 0.5)$probability)
plot.bincum <- function() {
plot(df$successes, df$probability, xlab = "success", ylab = "probability")
}
dis2 <- bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob) {
added = c()
add = 0
for (i in 0:trials) {
add = add + bin_probability(i, 5, prob)
added = append(added, add)
}
result = data.frame(0:trials, bin_probability(0:5, 5, prob), added)
names(result) = c("success", "probabality", "cumulative")
class(result) = c("bincum", "data.frame")
return(result)
}
bin_cumulative(trials = 5, prob = 0.5)
plot.bincum <- function() {
plot(df$successes, df$probability, xlab = "success", ylab = "probability")
}
dis2 <- bin_cumulative(trials = 5, prob = 0.5)
plot(dis2)
dis2 <- bin_cumulative(trials = 5, prob = 0.5)
plot(dis2)
dis2 <- bin_cumulative(trials = 5, prob = 0.5)
#plot(dis2)
typeof(dis2)
print.binvar <- function(bin) {
cat("\"Binomial variable \" \n ")
}
print.binvar <- function(bin) {
cat("\"Binomial variable \" \n ")
}
bin1 <- bin_variable(trials = 10, p = 0.3)
print.binvar <- function(bin) {
cat("\"Binomial variable \" \n ")
}
bin_var <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
result = list(trials, prob)
names(result) = c("trials", "prob")
class(result) = "binvar"
return(result)
}
}
bin1 <- bin_var(trials = 10, p = 0.3)
bin1
print.binvar <- function(bin) {
cat("\"Binomial variable\" \n Paramaters\n- number of trials: ")
cat(bin$trials)
cat("- prob of success : ")
cat(bine$prob)
}
bin_var <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
result = list(trials, prob)
names(result) = c("trials", "prob")
class(result) = "binvar"
return(result)
}
}
bin1 <- bin_var(trials = 10, p = 0.3)
bin1
print.binvar <- function(bin) {
cat("\"Binomial variable\" \n Paramaters\n- number of trials: ")
cat(bin$trials)
cat("\n- prob of success : ")
cat(bine$prob)
}
bin_var <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
result = list(trials, prob)
names(result) = c("trials", "prob")
class(result) = "binvar"
return(result)
}
}
bin1 <- bin_var(trials = 10, p = 0.3)
bin1
print.binvar <- function(bin) {
cat("\"Binomial variable\" \n Paramaters\n- number of trials: ")
cat(bin$trials)
cat("\n- prob of success : ")
cat(bin$prob)
}
bin_var <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
result = list(trials, prob)
names(result) = c("trials", "prob")
class(result) = "binvar"
return(result)
}
}
bin1 <- bin_var(trials = 10, p = 0.3)
bin1
print.binvar <- function(bin) {
cat("\"Binomial variable\" \nParamaters\n- number of trials: ")
cat(bin$trials)
cat("\n- prob of success : ")
cat(bin$prob)
}
bin_var <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
result = list(trials, prob)
names(result) = c("trials", "prob")
class(result) = "binvar"
return(result)
}
}
bin1 <- bin_var(trials = 10, p = 0.3)
bin1
print.binvar <- function(bin) {
cat("\"Binomial variable\" \n\nParamaters\n- number of trials: ")
cat(bin$trials)
cat("\n- prob of success : ")
cat(bin$prob)
}
bin_var <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
result = list(trials, prob)
names(result) = c("trials", "prob")
class(result) = "binvar"
return(result)
}
}
bin1 <- bin_var(trials = 10, p = 0.3)
bin1
bin_mean <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
return(aux_mean(trials, prob))
}
}
bin_variance <- function() {
if(check_trials(trials) && check_prob(prob)) {
return(aux_variance(trials, prob))
}
}
bin_mode <- function() {
if(check_trials(trials) && check_prob(prob)) {
return(aux_mode(trials, prob))
}
}
bin_skewness <- function() {
if(check_trials(trials) && check_prob(prob)) {
return(aux_skewness(trials, prob))
}
}
bin_kurtosis <- function() {
if(check_trials(trials) && check_prob(prob)) {
return(aux_kurtosis(trials, prob))
}
}
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mean <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
return(aux_mean(trials, prob))
}
}
bin_variance <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
return(aux_variance(trials, prob))
}
}
bin_mode <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
return(aux_mode(trials, prob))
}
}
bin_skewness <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
return(aux_skewness(trials, prob))
}
}
bin_kurtosis <- function(trials, prob) {
if(check_trials(trials) && check_prob(prob)) {
return(aux_kurtosis(trials, prob))
}
}
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
