"0","#' @title bin_choose"
"0","#' @description calculate n choose k"
"0","#' @param n"
"0","#' @param k"
"0","#' @return the result of n choose k"
"0","#' @export"
"0","#' @examples bin_choose(n = 5, k = 2)"
"0","#' @examples bin_choose(5, 0)"
"0","#' @examples bin_choose(5, 1:3)"
"0","bin_choose <- function(n, k) {"
"0","  if (max(k) == 1 && k > n) {"
"0","    stop(""k cannot be greater than n"")"
"0","  }"
"0","  return(factorial(n) / (factorial(k) * factorial(n - k)))"
"0","}"
"0","#' @title bin_variable"
"0","#' @description calculate n choose k"
"0","#' @param n"
"0","#' @param k"
"0","#' @return a binvar object"
"0","#' @export"
"0","#' @examples bin_variable(trials = 10, p = 0.3)"
"0","bin_variable <- function(trials, prob) {"
"0","  if(check_trials(trials) && check_prob(prob)) {"
"0","    result = list(trials, prob)"
"0","    names(result) = c(""trials"", ""prob"")"
"0","    class(result) = ""binvar"""
"0","    return(result)"
"0","  }"
"0","}"
"0","#' @title bin_probability"
"0","#' @description calculate the probability of success with a number of trials with prob of success in each trial"
"0","#' @param success"
"0","#' @param trials"
"0","#' @param prob"
"0","#' @return the probability"
"0","#' @export"
"0","#' @examples bin_probability(success = 2, trials = 5, prob = 0.5)"
"0","#' @examples bin_probability(success = 0:2, trials = 5, prob = 0.5)"
"0","#' @examples bin_probability(success = 55, trials = 100, prob = 0.45)"
"0","bin_probability <- function(success, trials, prob) {"
"0","  if(!check_trials(trials)) {"
"0","    stop(""invalid trials value"")"
"0","  } else if (!check_prob(prob)) {"
"0","    stop(""invalid prob value"")"
"0","  } else if (!check_successes(success, trials)) {"
"0","    stop(""invalid success value"")"
"0","  } else {"
"0","    return(bin_choose(trials, success) * (prob ** success) * ((1 - prob) ** (trials - success)))"
"0","  }"
"0","}"
